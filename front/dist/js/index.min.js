function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftarrow=$(".left-arrow"),this.rightarrow=$(".right-arrow"),this.bannerUI=$(".banner-ul"),this.liList=this.bannerUI.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){var n=this;n.page=2,n.category_id=0,n.loadBtn=$("#load-more-btn")}Banner.prototype.initBanner=function(){var n=this,t=n.liList.eq(0).clone(),e=n.liList.eq(n.bannerCount-1).clone();n.bannerUI.append(t),n.bannerUI.prepend(e),n.bannerUI.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16*n.bannerCount})},Banner.prototype.animate=function(){var n=this;n.bannerUI.stop().animate({left:-798*n.index},500);var t=n.index;t=0===t?n.bannerCount-1:t===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.toggleArrow=function(n){var t=this;n?(t.leftarrow.show(),t.rightarrow.show()):(t.leftarrow.hide(),t.rightarrow.hide())},Banner.prototype.loop=function(){var n=this;console.log("dsdg"),this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUI.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenArrowClick=function(){var n=this;n.leftarrow.click(function(){0===n.index?(n.bannerUI.css({left:-n.bannerWidth*n.bannerCount}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightarrow.click(function(){n.index===n.bannerCount+1?(n.bannerUI.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenBannerControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.run=function(){this.initBanner(),this.initPageControl(),this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.listenBannerControl()},Index.prototype.listenLoadMoreEvent=function(){var i=this,r=$("#load-more-btn");r.click(function(){xfzajax.get({url:"/news/news_list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page+=1}else r.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this),a=r.attr("data-category");xfzajax.get({url:"/news/news_list/",data:{category_id:a,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),o.page=2,o.category_id=a,r.addClass("active").siblings().removeClass("active"),o.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhbm5lciIsInRoaXMiLCJiYW5uZXJXaWR0aCIsImJhbm5lckdyb3VwIiwiJCIsImluZGV4IiwibGVmdGFycm93IiwicmlnaHRhcnJvdyIsImJhbm5lclVJIiwibGlMaXN0IiwiY2hpbGRyZW4iLCJiYW5uZXJDb3VudCIsImxlbmd0aCIsInBhZ2VDb250cm9sIiwiSW5kZXgiLCJzZWxmIiwicGFnZSIsImNhdGVnb3J5X2lkIiwibG9hZEJ0biIsInByb3RvdHlwZSIsImluaXRCYW5uZXIiLCJmaXJzdEJhbm5lciIsImVxIiwiY2xvbmUiLCJsYXN0QmFubmVyIiwiYXBwZW5kIiwicHJlcGVuZCIsImNzcyIsIndpZHRoIiwibGVmdCIsImluaXRQYWdlQ29udHJvbCIsImkiLCJjaXJjbGUiLCJhZGRDbGFzcyIsImFuaW1hdGUiLCJzdG9wIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUFycm93IiwiaXNTaG93Iiwic2hvdyIsImhpZGUiLCJsb29wIiwiY29uc29sZSIsImxvZyIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJsaXN0ZW5BcnJvd0NsaWNrIiwiY2xpY2siLCJsaXN0ZW5CYW5uZXJIb3ZlciIsImhvdmVyIiwiY2xlYXJJbnRlcnZhbCIsImxpc3RlbkJhbm5lckNvbnRyb2wiLCJlYWNoIiwib2JqIiwicnVuIiwibGlzdGVuTG9hZE1vcmVFdmVudCIsInhmemFqYXgiLCJnZXQiLCJ1cmwiLCJkYXRhIiwicCIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJuZXdzZXMiLCJ0cGwiLCJ0ZW1wbGF0ZSIsImxpc3RlbkNhdGVnb3J5U3dpdGNoRXZlbnQiLCJsaSIsImF0dHIiLCJuZXdzTGlzdEdyb3VwIiwiZW1wdHkiXSwibWFwcGluZ3MiOiJBQVFBLFNBQVNBLFNBQ0xDLEtBQUtDLFlBQWMsSUFDbkJELEtBQUtFLFlBQWNDLEVBQUUsaUJBRXJCSCxLQUFLSSxNQUFRLEVBQ2JKLEtBQUtLLFVBQVlGLEVBQUUsZUFDbkJI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TUFBbkJBLEVBQWEsS0FBVSxDQUN0QixJQUFJQyxFQUFTRCxFQUFhLEtBQ3RCRSxFQUFNQyxTQUFTLFlBQVksQ0FBQ0YsT0FBU0EsSUFFckNNLEVBQWdCbEUsRUFBRSxxQkFDdEJrRSxFQUFjQyxRQUNkRCxFQUFjN0MsT0FBT3dDLEdBQ3JCbEQsRUFBS0MsS0FBTyxFQUNaRCxFQUFLRSxZQUFjQSxFQUNuQm1ELEVBQUduQyxTQUFTLFVBQVVHLFdBQVdDLFlBQVksVUFDN0N0QixFQUFLRyxRQUFRc0IsY0FPakMxQixNQUFNSyxVQUFVb0MsSUFBTSxXQUNQdEQsS0FDTnVELHNCQURNdkQsS0FFTmtFLDZCQUdUL0QsRUFBRSxZQUNlLElBQUlKLFFBQ1Z1RCxPQUVLLElBQUl6QyxPQUNWeUMiLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/pnaLlkJHlr7nosaFcclxuXHJcbi8vIGZ1bmN0aW9uIEJhbm5lcigpIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKFwi5p6E6YCg5Ye95pWwXCIpXHJcbi8vICAgICB0aGlzLlxyXG4vLyB9XHJcbi8vXHJcbi8vIHZhciBiYW5uZXIgPSBuZXcgQmFubmVyKCk7XHJcbmZ1bmN0aW9uIEJhbm5lcigpIHtcclxuICAgIHRoaXMuYmFubmVyV2lkdGggPSA3OTg7XHJcbiAgICB0aGlzLmJhbm5lckdyb3VwID0gJChcIiNiYW5uZXItZ3JvdXBcIik7XHJcblxyXG4gICAgdGhpcy5pbmRleCA9IDE7XHJcbiAgICB0aGlzLmxlZnRhcnJvdyA9ICQoXCIubGVmdC1hcnJvd1wiKTtcclxuICAgIHRoaXMucmlnaHRhcnJvdz0kKFwiLnJpZ2h0LWFycm93XCIpO1xyXG4gICAgdGhpcy5iYW5uZXJVSSA9ICQoXCIuYmFubmVyLXVsXCIpO1xyXG4gICAgdGhpcy5saUxpc3QgPSB0aGlzLmJhbm5lclVJLmNoaWxkcmVuKFwibGlcIik7XHJcbiAgICB0aGlzLmJhbm5lckNvdW50ID0gdGhpcy5saUxpc3QubGVuZ3RoO1xyXG4gICAgdGhpcy5wYWdlQ29udHJvbCA9ICQoXCIucGFnZS1jb250cm9sXCIpO1xyXG59O1xyXG5cclxuQmFubmVyLnByb3RvdHlwZS5pbml0QmFubmVyID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbiAgICB2YXIgZmlyc3RCYW5uZXIgPSBzZWxmLmxpTGlzdC5lcSgwKS5jbG9uZSgpO1xyXG4gICAgdmFyIGxhc3RCYW5uZXIgPSBzZWxmLmxpTGlzdC5lcShzZWxmLmJhbm5lckNvdW50LTEpLmNsb25lKCk7XHJcbiAgICBzZWxmLmJhbm5lclVJLmFwcGVuZChmaXJzdEJhbm5lcik7XHJcbiAgICBzZWxmLmJhbm5lclVJLnByZXBlbmQobGFzdEJhbm5lcik7XHJcbiAgICBzZWxmLmJhbm5lclVJLmNzcyh7XCJ3aWR0aFwiOnNlbGYuYmFubmVyV2lkdGgqKHNlbGYuYmFubmVyQ291bnQrMiksXCJsZWZ0XCI6LXNlbGYuYmFubmVyV2lkdGh9KTtcclxuXHJcbn07XHJcblxyXG5cclxuQmFubmVyLnByb3RvdHlwZS5pbml0UGFnZUNvbnRyb2wgPSBmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGZvciAodmFyIGkgPSAwO2k8c2VsZi5iYW5uZXJDb3VudDtpKyspe1xyXG4gICAgICAgIHZhciBjaXJjbGUgPSAkKFwiPGxpPjwvbGk+XCIpO1xyXG4gICAgICAgIHNlbGYucGFnZUNvbnRyb2wuYXBwZW5kKGNpcmNsZSk7XHJcbiAgICAgICAgaWYoaSA9PT0wKXtcclxuICAgICAgICAgICAgY2lyY2xlLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZWxmLnBhZ2VDb250cm9sLmNzcyh7XCJ3aWR0aFwiOnNlbGYuYmFubmVyQ291bnQqMTIrc2VsZi5iYW5uZXJDb3VudCoxNn0pXHJcbn07XHJcblxyXG5cclxuQmFubmVyLnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHNlbGYuYmFubmVyVUkuc3RvcCgpLmFuaW1hdGUoe1wibGVmdFwiOi03OTgqc2VsZi5pbmRleH0sNTAwKTtcclxuICAgICAgICB2YXIgaW5kZXggPSBzZWxmLmluZGV4O1xyXG4gICAgICAgIGlmKGluZGV4ID09PTApe1xyXG4gICAgICAgICAgICBpbmRleCA9IHNlbGYuYmFubmVyQ291bnQtMTtcclxuICAgICAgICB9ZWxzZSAgaWYoaW5kZXggPT09IHNlbGYuYmFubmVyQ291bnQrMSl7XHJcbiAgICAgICAgICAgIGluZGV4ID0gMDtcclxuICAgICAgICB9ZWxzZSAge1xyXG4gICAgICAgICAgICBpbmRleCA9IHNlbGYuaW5kZXggLTE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYucGFnZUNvbnRyb2wuY2hpbGRyZW4oXCJsaVwiKS5lcShpbmRleCkuYWRkQ2xhc3MoXCJhY3RpdmVcIikuc2libGluZ3MoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuXHJcbn07XHJcblxyXG5cclxuXHJcblxyXG5CYW5uZXIucHJvdG90eXBlLnRvZ2dsZUFycm93ID0gZnVuY3Rpb24oaXNTaG93KXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGlmIChpc1Nob3cpe1xyXG4gICAgICAgIHNlbGYubGVmdGFycm93LnNob3coKTtcclxuICAgICAgIHNlbGYucmlnaHRhcnJvdy5zaG93KCk7XHJcblxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgc2VsZi5sZWZ0YXJyb3cuaGlkZSgpO1xyXG4gICAgICAgc2VsZi5yaWdodGFycm93LmhpZGUoKTtcclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5cclxuQmFubmVyLnByb3RvdHlwZS5sb29wID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuXHJcbiAgICAvL2Jhbm5lclVJLmNzcyh7XCJsZWZ0XCI6LTQwMH0pXHJcbiAgICBjb25zb2xlLmxvZyhcImRzZGdcIilcclxuICAgIC8vYmFubmVyVUkuYW5pbWF0ZSh7XCJsZWZ0XCI6LTc5OH0sNTAwKVxyXG4gICAgLy/lrprml7blmahcclxuICAgIHRoaXMudGltZXI9c2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChzZWxmLmluZGV4ID49IHNlbGYuYmFubmVyQ291bnQrMSl7XHJcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVUkuY3NzKHtcImxlZnRcIjotc2VsZi5iYW5uZXJXaWR0aH0pO1xyXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gMjtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXgrKztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHNlbGYuYW5pbWF0ZSgpO1xyXG4gICAgfSwyMDAwKVxyXG59O1xyXG5cclxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5BcnJvd0NsaWNrID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubGVmdGFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoc2VsZi5pbmRleCA9PT0gMCkge1xyXG4gICAgICAgICAgICBzZWxmLmJhbm5lclVJLmNzcyh7XCJsZWZ0XCI6LXNlbGYuYmFubmVyV2lkdGgqc2VsZi5iYW5uZXJDb3VudH0pXHJcbiAgICAgICAgICAgIHNlbGYuaW5kZXggPSBzZWxmLmJhbm5lckNvdW50IC0gMTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLmluZGV4LS07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDtcclxuICAgICAgICAvL3NlbGYuYmFubmVyVUkuYW5pbWF0ZSh7XCJsZWZ0XCI6LTc5OCpzZWxmLmluZGV4fSw1MDApXHJcbiAgICAgICAgc2VsZi5hbmltYXRlKCk7XHJcbiAgICB9KTtcclxuICAgIHNlbGYucmlnaHRhcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChzZWxmLmluZGV4ID09PSBzZWxmLmJhbm5lckNvdW50ICsxKXtcclxuICAgICAgICAgICAgICAgIHNlbGYuYmFubmVyVUkuY3NzKHtcImxlZnRcIjotc2VsZi5iYW5uZXJXaWR0aH0pO1xyXG4gICAgICAgICAgICAgICAgc2VsZi5pbmRleCA9IDI7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgc2VsZi5pbmRleCsrO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvL3NlbGYuYmFubmVyVUkuYW5pbWF0ZSh7XCJsZWZ0XCI6LTc5OCpzZWxmLmluZGV4fSw1MDApXHJcbiAgICAgICAgc2VsZi5hbmltYXRlKCk7XHJcbiAgICB9KTtcclxufTtcclxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5CYW5uZXJIb3ZlciA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLmJhbm5lckdyb3VwLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+esrOS4gOS4quWHveaVsOaYr+aKium8oOagh+enu+WKqOWIsGJhbm5lcuS8muaJp+ihjOeahOWHveaVsFxyXG5cclxuICAgICAgICBjbGVhckludGVydmFsKHNlbGYudGltZXIpXHJcbiAgICAgICAgc2VsZi50b2dnbGVBcnJvdyh0cnVlKTtcclxuXHJcbiAgICB9LGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+esrOS6jOS4quWHveaVsOaYr+aKium8oOagh+enu+i1sOeahOWHveaVsFxyXG4gICAgICAgIHNlbGYubG9vcCgpO1xyXG4gICAgICAgIHNlbGYudG9nZ2xlQXJyb3coZmFsc2UpO1xyXG4gICAgfSk7XHJcbn07XHJcbkJhbm5lci5wcm90b3R5cGUubGlzdGVuQmFubmVyQ29udHJvbCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLnBhZ2VDb250cm9sLmNoaWxkcmVuKFwibGlcIikuZWFjaChmdW5jdGlvbiAoaW5kZXgsb2JqKSB7XHJcbiAgICAgICAgJChvYmopLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VsZi5pbmRleCA9IGluZGV4KzE7XHJcblxyXG4gICAgICAgICAgICBzZWxmLmFuaW1hdGUoKTtcclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbkJhbm5lci5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIC8vXHJcbiAgICAvL+a4hemZpOWumuaXtuWZqFxyXG4gICAgLy9jbGVhckludGVydmFsKHRpbWVyKTtcclxuICAgIHRoaXMuaW5pdEJhbm5lcigpO1xyXG4gICAgdGhpcy5pbml0UGFnZUNvbnRyb2woKTtcclxuICAgIHRoaXMubG9vcCgpO1xyXG4gICAgdGhpcy5saXN0ZW5CYW5uZXJIb3ZlcigpO1xyXG4gICAgdGhpcy5saXN0ZW5BcnJvd0NsaWNrKCk7XHJcbiAgICB0aGlzLmxpc3RlbkJhbm5lckNvbnRyb2woKTtcclxufTtcclxuXHJcblxyXG5mdW5jdGlvbiBJbmRleCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYucGFnZSA9IDI7XHJcbiAgICBzZWxmLmNhdGVnb3J5X2lkID0gMDtcclxuICAgIHNlbGYubG9hZEJ0biA9ICQoXCIjbG9hZC1tb3JlLWJ0blwiKTtcclxuXHJcbn1cclxuXHJcbkluZGV4LnByb3RvdHlwZS5saXN0ZW5Mb2FkTW9yZUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGxvYWRCdG4gPSAkKFwiI2xvYWQtbW9yZS1idG5cIik7XHJcbiAgICBsb2FkQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL25ld3MvbmV3c19saXN0LycsXHJcbiAgICAgICAgICAgICdkYXRhJzp7XHJcbiAgICAgICAgICAgICAgICAncCc6IHNlbGYucGFnZSxcclxuICAgICAgICAgICAgICAgICdjYXRlZ29yeV9pZCc6IHNlbGYuY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3c2VzID0gcmVzdWx0WydkYXRhJ107XHJcbiAgICAgICAgICAgICAgICAgICAgaWYobmV3c2VzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoXCJuZXdzLWl0ZW1cIix7XCJuZXdzZXNcIjpuZXdzZXN9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVsID0gJChcIi5saXN0LWlubmVyLWdyb3VwXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1bC5hcHBlbmQodHBsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlICs9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRCdG4uaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5JbmRleC5wcm90b3R5cGUubGlzdGVuQ2F0ZWdvcnlTd2l0Y2hFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciB0YWJHcm91cCA9ICQoXCIubGlzdC10YWJcIik7XHJcbiAgICB0YWJHcm91cC5jaGlsZHJlbigpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyB0aGlz77ya5Luj6KGo5b2T5YmN6YCJ5Lit55qE6L+Z5LiqbGnmoIfnrb5cclxuICAgICAgICB2YXIgbGkgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGxpLmF0dHIoXCJkYXRhLWNhdGVnb3J5XCIpO1xyXG4gICAgICAgIHZhciBwYWdlID0gMTtcclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL25ld3MvbmV3c19saXN0LycsXHJcbiAgICAgICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzogY2F0ZWdvcnlfaWQsXHJcbiAgICAgICAgICAgICAgICAncCc6IHBhZ2VcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3c2VzID0gcmVzdWx0WydkYXRhJ107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKFwibmV3cy1pdGVtXCIse1wibmV3c2VzXCI6bmV3c2VzfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZW1wdHnvvJrlj6/ku6XlsIbov5nkuKrmoIfnrb7kuIvnmoTmiYDmnInlrZDlhYPntKDpg73liKDmjolcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3c0xpc3RHcm91cCA9ICQoXCIubGlzdC1pbm5lci1ncm91cFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBuZXdzTGlzdEdyb3VwLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3c0xpc3RHcm91cC5hcHBlbmQodHBsKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLnBhZ2UgPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2F0ZWdvcnlfaWQgPSBjYXRlZ29yeV9pZDtcclxuICAgICAgICAgICAgICAgICAgICBsaS5hZGRDbGFzcygnYWN0aXZlJykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkQnRuLnNob3coKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5JbmRleC5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5saXN0ZW5Mb2FkTW9yZUV2ZW50KCk7XHJcbiAgICBzZWxmLmxpc3RlbkNhdGVnb3J5U3dpdGNoRXZlbnQoKTtcclxufTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGJhbm5lciA9IG5ldyBCYW5uZXIoKTtcclxuICAgIGJhbm5lci5ydW4oKTtcclxuXHJcbiAgICB2YXIgaW5kZXggPSBuZXcgSW5kZXgoKTtcclxuICAgIGluZGV4LnJ1bigpO1xyXG59KTsiXX0=
